# Code generated by ADL CLI v0.21.4. DO NOT EDIT.
# This file was automatically generated from an ADL (Agent Definition Language) specification.
# Manual changes to this file may be overwritten during regeneration.

---
branches:
  - { name: main, prerelease: false, channel: latest }
  - { name: 'rc/*', prerelease: rc, channel: rc }

repositoryUrl: 'https://github.com/inference-gateway/n8n-agent'
tagFormat: 'v${version}'

verifyConditions:
  - '@semantic-release/github'
  - '@semantic-release/git'

plugins:
  - - '@semantic-release/commit-analyzer'
    - preset: 'conventionalcommits'
      releaseRules:
        - { type: 'feat', release: 'minor' }
        - { type: 'impr', release: 'patch' }
        - { type: 'refactor', release: 'patch' }
        - { type: 'perf', release: 'patch' }
        - { type: 'fix', release: 'patch' }
        - { type: 'ci', release: 'patch' }
        - { type: 'docs', release: 'patch' }
        - { type: 'style', release: 'patch' }
        - { type: 'test', release: 'patch' }
        - { type: 'build', release: 'patch' }
        - { type: 'security', release: 'patch' }
        - { type: 'chore', release: 'patch', scope: '!release' }

  - - '@semantic-release/release-notes-generator'
    - preset: 'conventionalcommits'
      presetConfig:
        types:
          - { type: 'feat', section: '‚ú® Features' }
          - { type: 'impr', section: 'üöÄ Improvements' }
          - { type: 'refactor', section: '‚ôªÔ∏è Improvements' }
          - { type: 'perf', section: '‚ö°Ô∏è Improvements' }
          - { type: 'fix', section: 'üêõ Bug Fixes' }
          - { type: 'ci', section: 'üë∑ CI' }
          - { type: 'docs', section: 'üìö Documentation' }
          - { type: 'chore', section: 'üîß Miscellaneous' }
          - { type: 'style', section: 'üé® Miscellaneous' }
          - { type: 'test', section: '‚úÖ Miscellaneous' }
          - { type: 'build', section: 'üî® Miscellaneous' }
          - { type: 'security', section: 'üîí Security' }

  - - '@semantic-release/changelog'
    - changelogFile: CHANGELOG.md
      changelogTitle: "# Changelog\n\nAll notable changes to this project will be documented in this file."
      verifyConditions: true

  - - '@semantic-release/exec'
    - prepareCmd: |
        sed -i "/^metadata:/,/^spec:/ s/  version: .*/  version: ${nextRelease.version}/" agent.yaml
        task generate
      publishCmd: |
        echo "Building and pushing Docker image for version ${nextRelease.version}"
        REPO_LOWER=$(echo "$GITHUB_REPOSITORY" | tr '[:upper:]' '[:lower:]')
        DESCRIPTION="A helpful AI agent"
        TITLE="n8n-agent"
        
        if [[ "$GITHUB_REF_NAME" == rc/* ]]; then
          docker buildx build --platform linux/amd64,linux/arm64 \
            --cache-from type=gha \
            --cache-from type=registry,ref=ghcr.io/$REPO_LOWER:buildcache \
            --cache-to type=gha,mode=max \
            --cache-to type=registry,ref=ghcr.io/$REPO_LOWER:buildcache,mode=max \
            --annotation "index:org.opencontainers.image.source=https://github.com/$REPO_LOWER" \
            --annotation "index:org.opencontainers.image.description=$DESCRIPTION" \
            --annotation "index:org.opencontainers.image.version=${nextRelease.version}" \
            --annotation "index:org.opencontainers.image.title=$TITLE" \
            --tag ghcr.io/$REPO_LOWER:${nextRelease.version} \
            --push .
        else
          docker buildx build --platform linux/amd64,linux/arm64 \
            --cache-from type=gha \
            --cache-from type=registry,ref=ghcr.io/$REPO_LOWER:buildcache \
            --cache-to type=gha,mode=max \
            --cache-to type=registry,ref=ghcr.io/$REPO_LOWER:buildcache,mode=max \
            --annotation "index:org.opencontainers.image.source=https://github.com/$REPO_LOWER" \
            --annotation "index:org.opencontainers.image.description=$DESCRIPTION" \
            --annotation "index:org.opencontainers.image.version=${nextRelease.version}" \
            --annotation "index:org.opencontainers.image.title=$TITLE" \
            --tag ghcr.io/$REPO_LOWER:${nextRelease.version} \
            --tag ghcr.io/$REPO_LOWER:latest \
            --push .
        fi

  - - '@semantic-release/git'
    - assets:
        - CHANGELOG.md
        - agent.yaml
        - AGENTS.md
        - Dockerfile
        - main.go
        - README.md
        - Taskfile.yml
        - .well-known/agent.json
      message: "chore(release): üîñ ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"

  - - '@semantic-release/github'
    - assets:
        - CHANGELOG.md
      releasedLabels: ['released']
      releaseNameTemplate: 'üöÄ Version ${nextRelease.version}'
      successCommentCondition: 'false'
      labels:
        - 'release'
        - "<% nextRelease.channel === 'rc' ? 'rc' : '' %>"
