# Code generated by ADL CLI v0.21.7. DO NOT EDIT.
# This file was automatically generated from an ADL (Agent Definition Language) specification.
# Manual changes to this file may be overwritten during regeneration.

FROM golang:1.25-alpine AS builder

# Build arguments for version injection
ARG VERSION="0.1.11"
ARG AGENT_NAME="n8n-agent"
ARG AGENT_DESCRIPTION="A2A agent server specialized in generating and automating n8n workflows"

WORKDIR /app

# Install ca-certificates for HTTPS requests
RUN apk --no-cache add ca-certificates

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the application with optimized LDD flags and version injection
RUN CGO_ENABLED=0 GOOS=linux go build \
    -a \
    -installsuffix cgo \
    -ldflags="-s -w -extldflags '-static' \
        -X 'main.Version=${VERSION}' \
        -X 'main.AgentName=${AGENT_NAME}' \
        -X 'main.AgentDescription=${AGENT_DESCRIPTION}'" \
    -trimpath \
    -o main .

# Final stage
FROM alpine:latest

RUN apk --no-cache add ca-certificates tzdata

WORKDIR /root/

# Copy the binary from builder stage
COPY --from=builder /app/main .

# Copy agent card
COPY --from=builder /app/.well-known ./.well-known

# Copy documentation
COPY --from=builder /app/docs ./docs

# Expose port
EXPOSE 8080

# Set environment variables
ENV A2A_SERVER_PORT=8080

# Run the application
CMD ["./main"]
